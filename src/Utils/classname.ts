import { RefObject, useEffect } from "react";

interface ObjectProps {
    [className: string]: boolean;
}
type ClassNameType = string | ObjectProps | undefined | null;

export const classNames = (...classes: Array<ClassNameType>): string => {
    const res: Array<string> = [];
    for (const value of classes) {
        if (!value) continue;
        if (typeof value === "string") {
            res.push(value);
        } else if (typeof value === "object") {
            for (const key in value) {
                if (Object.prototype.hasOwnProperty.call(value, key)) {
                    const flag = value[key];
                    if (flag) {
                        res.push(key);
                    }
                }
            }
        }
    }
    return res.filter((i) => i.trim()).join(" ");
};

export function useClickOutside(
    ref: RefObject<HTMLElement>,
    handler: (event: MouseEvent) => void,
): void {
    useEffect(() => {
        const listener = (event: MouseEvent) => {
            if (!ref.current || ref.current.contains(event.target as HTMLElement)) {
                return;
            }
            handler(event);
        };
        document.addEventListener("click", listener);
        return () => {
            document.removeEventListener("click", listener);
        };
    }, [ref, handler]);
}

export enum iconType {
    "customer",
    "union",
    "analysis",
    "display",
    "distribution",
    "script",
    "mark",
    "permissionSetting",
    "insert",
    "documentDelete",
    "comment",
    "permissionopen",
    "supplier",
    "home",
    "score",
    "singleChoiceUnselected",
    "singleChoiceSelected",
    "scriptNode",
    "screenSection",
    "quota",
    "openSource",
    "openEnd2",
    "multipleLinear",
    "markMode",
    "exitNode",
    "executionNode2",
    "conditionScript",
    "blockNodeLinear",
    "fillPicture",
    "bind",
    "text1",
    "at",
    "backToTop",
    "readMore",
    "chooseFill",
    "descendingOrder",
    "ascendingOrder",
    "switchIcon",
    "choose",
    "shrink",
    "organizationSolid",
    "organization",
    "notice2",
    "notice1",
    "picture",
    "vector1",
    "triangleUp",
    "grouped",
    "union1",
    "aUpAndDownUp",
    "aUpAndDown",
    "camera",
    "mobile",
    "language",
    "clipboardCheck",
    "person02",
    "documentEdit",
    "unfold",
    "fold",
    "archive",
    "previousPage",
    "nextPage",
    "listSetting",
    "upanddown",
    "executionPlay",
    "executionplaySolid",
    "linkedinSquare",
    "successSolid",
    "success",
    "responseRate",
    "incidenceRate",
    "completionRate",
    "calendar",
    "move",
    "CSSfile",
    "JSfile",
    "text",
    "folder",
    "addFolder",
    "plugin",
    "donutChart",
    "areaChart",
    "lineChart",
    "stackedColumnChart",
    "columnChart",
    "stackedBarChart",
    "barChart",
    "exit",
    "paste",
    "forbidden",
    "refresh",
    "management",
    "notification",
    "eyeOpen",
    "warningTriangle",
    "mail",
    "vector",
    "newMessage",
    "template",
    "weblink",
    "visualization",
    "targetedResponses",
    "design",
    "table",
    "attachment",
    "contacts",
    "volume",
    "fromScratch",
    "gaugeChart",
    "pieChart",
    "history",
    "send",
    "moreHorizontal",
    "nothing",
    "linkedIn",
    "google",
    "facebook",
    "facebookSquare",
    "twitterSquare",
    "alipay",
    "deleteMinus",
    "nextArrow",
    "plus",
    "desktop",
    "checkboxSolid",
    "singleChoice",
    "openEnd",
    "utility",
    "codeBranch",
    "copy",
    "tablet",
    "flagSolid",
    "group",
    "logout",
    "loopNode",
    "executionNode",
    "multiChoice",
    "flag",
    "groupSolid",
    "pen",
    "setting",
    "checkboxEmpty",
    "blockNode",
    "palette",
    "save",
    "commentSolid",
    "warning",
    "error",
    "clone",
    "info",
    "relation",
    "exportIcon",
    "importIcon",
    "check",
    "addition",
    "up",
    "previous",
    "next",
    "down",
    "form",
    "dustbin",
    "more",
    "burgerMenu",
    "right",
    "grid",
    "documentation",
    "person01",
    "person01Solid",
    "query",
    "list",
    "dropdown",
    "addition01",
    "moreVertical",
    "filter",
    "queryLinear",
    "edit",
    "share",
    "like",
    "open",
    "search",
    "collection",
    "closeeyeHide",
    "openeyeShow",
    "close",
    "empty",
    "login",
    "subtract",
    "collected",
    "nextProgress",
    "restore",
    "pause",
    "lock",
}
